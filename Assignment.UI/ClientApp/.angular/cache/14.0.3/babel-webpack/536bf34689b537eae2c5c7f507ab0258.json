{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar isFunction_1 = require('./util/isFunction');\n\nvar Subscription_1 = require('./Subscription');\n\nvar Observer_1 = require('./Observer');\n\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\n\n\nvar Subscriber = function (_super) {\n  __extends(Subscriber, _super);\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n\n\n  function Subscriber(destinationOrNext, error, complete) {\n    _super.call(this);\n\n    this.syncErrorValue = null;\n    this.syncErrorThrown = false;\n    this.syncErrorThrowable = false;\n    this.isStopped = false;\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = Observer_1.empty;\n        break;\n\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = Observer_1.empty;\n          break;\n        }\n\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber(this, destinationOrNext);\n          }\n\n          break;\n        }\n\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () {\n    return this;\n  };\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n\n\n  Subscriber.create = function (next, error, complete) {\n    var subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  };\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.next = function (value) {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  };\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._error(err);\n    }\n  };\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n\n\n  Subscriber.prototype.complete = function () {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._complete();\n    }\n  };\n\n  Subscriber.prototype.unsubscribe = function () {\n    if (this.closed) {\n      return;\n    }\n\n    this.isStopped = true;\n\n    _super.prototype.unsubscribe.call(this);\n  };\n\n  Subscriber.prototype._next = function (value) {\n    this.destination.next(value);\n  };\n\n  Subscriber.prototype._error = function (err) {\n    this.destination.error(err);\n    this.unsubscribe();\n  };\n\n  Subscriber.prototype._complete = function () {\n    this.destination.complete();\n    this.unsubscribe();\n  };\n  /** @deprecated internal use only */\n\n\n  Subscriber.prototype._unsubscribeAndRecycle = function () {\n    var _a = this,\n        _parent = _a._parent,\n        _parents = _a._parents;\n\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  };\n\n  return Subscriber;\n}(Subscription_1.Subscription);\n\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar SafeSubscriber = function (_super) {\n  __extends(SafeSubscriber, _super);\n\n  function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n    _super.call(this);\n\n    this._parentSubscriber = _parentSubscriber;\n    var next;\n    var context = this;\n\n    if (isFunction_1.isFunction(observerOrNext)) {\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      next = observerOrNext.next;\n      error = observerOrNext.error;\n      complete = observerOrNext.complete;\n\n      if (observerOrNext !== Observer_1.empty) {\n        context = Object.create(observerOrNext);\n\n        if (isFunction_1.isFunction(context.unsubscribe)) {\n          this.add(context.unsubscribe.bind(context));\n        }\n\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  SafeSubscriber.prototype.next = function (value) {\n    if (!this.isStopped && this._next) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.complete = function () {\n    var _this = this;\n\n    if (!this.isStopped) {\n      var _parentSubscriber = this._parentSubscriber;\n\n      if (this._complete) {\n        var wrappedComplete = function () {\n          return _this._complete.call(_this._context);\n        };\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  };\n\n  SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  };\n\n  SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n\n    return false;\n  };\n  /** @deprecated internal use only */\n\n\n  SafeSubscriber.prototype._unsubscribe = function () {\n    var _parentSubscriber = this._parentSubscriber;\n    this._context = null;\n    this._parentSubscriber = null;\n\n    _parentSubscriber.unsubscribe();\n  };\n\n  return SafeSubscriber;\n}(Subscriber);\n\nfunction isTrustedSubscriber(obj) {\n  return obj instanceof Subscriber || 'syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber];\n}","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","isFunction_1","require","Subscription_1","Observer_1","rxSubscriber_1","Subscriber","_super","destinationOrNext","error","complete","call","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","arguments","length","destination","empty","isTrustedSubscriber","trustedSubscriber","rxSubscriber","add","SafeSubscriber","next","subscriber","value","_next","err","_error","_complete","unsubscribe","closed","_unsubscribeAndRecycle","_a","_parent","_parents","Subscription","exports","_parentSubscriber","observerOrNext","context","isFunction","bind","_context","__tryOrUnsub","__tryOrSetError","_this","wrappedComplete","fn","parent","_unsubscribe","obj"],"sources":["C:/Users/vidit.jain/node_modules/rxjs/Subscriber.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = require('./util/isFunction');\nvar Subscription_1 = require('./Subscription');\nvar Observer_1 = require('./Observer');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): To resolve an issue where Node users may have multiple\n                    // copies of rxjs in their node_modules directory.\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber_1.rxSubscriber]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    /** @deprecated internal use only */ Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    /** @deprecated internal use only */ SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriber_1.rxSubscriber]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
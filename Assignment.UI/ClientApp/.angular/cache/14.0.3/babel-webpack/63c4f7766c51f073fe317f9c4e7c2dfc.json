{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Observable_1 = require('../Observable');\n\nvar Notification_1 = require('../Notification');\n\nvar ColdObservable_1 = require('./ColdObservable');\n\nvar HotObservable_1 = require('./HotObservable');\n\nvar SubscriptionLog_1 = require('./SubscriptionLog');\n\nvar VirtualTimeScheduler_1 = require('../scheduler/VirtualTimeScheduler');\n\nvar defaultMaxFrame = 750;\n\nvar TestScheduler = function (_super) {\n  __extends(TestScheduler, _super);\n\n  function TestScheduler(assertDeepEqual) {\n    _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);\n\n    this.assertDeepEqual = assertDeepEqual;\n    this.hotObservables = [];\n    this.coldObservables = [];\n    this.flushTests = [];\n  }\n\n  TestScheduler.prototype.createTime = function (marbles) {\n    var indexOf = marbles.indexOf('|');\n\n    if (indexOf === -1) {\n      throw new Error('marble diagram for time should have a completion marker \"|\"');\n    }\n\n    return indexOf * TestScheduler.frameTimeFactor;\n  };\n\n  TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n    if (marbles.indexOf('^') !== -1) {\n      throw new Error('cold observable cannot have subscription offset \"^\"');\n    }\n\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('cold observable cannot have unsubscription marker \"!\"');\n    }\n\n    var messages = TestScheduler.parseMarbles(marbles, values, error);\n    var cold = new ColdObservable_1.ColdObservable(messages, this);\n    this.coldObservables.push(cold);\n    return cold;\n  };\n\n  TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('hot observable cannot have unsubscription marker \"!\"');\n    }\n\n    var messages = TestScheduler.parseMarbles(marbles, values, error);\n    var subject = new HotObservable_1.HotObservable(messages, this);\n    this.hotObservables.push(subject);\n    return subject;\n  };\n\n  TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n    var _this = this;\n\n    var messages = [];\n    observable.subscribe(function (value) {\n      messages.push({\n        frame: _this.frame - outerFrame,\n        notification: Notification_1.Notification.createNext(value)\n      });\n    }, function (err) {\n      messages.push({\n        frame: _this.frame - outerFrame,\n        notification: Notification_1.Notification.createError(err)\n      });\n    }, function () {\n      messages.push({\n        frame: _this.frame - outerFrame,\n        notification: Notification_1.Notification.createComplete()\n      });\n    });\n    return messages;\n  };\n\n  TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n    var _this = this;\n\n    if (unsubscriptionMarbles === void 0) {\n      unsubscriptionMarbles = null;\n    }\n\n    var actual = [];\n    var flushTest = {\n      actual: actual,\n      ready: false\n    };\n    var unsubscriptionFrame = TestScheduler.parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n    var subscription;\n    this.schedule(function () {\n      subscription = observable.subscribe(function (x) {\n        var value = x; // Support Observable-of-Observables\n\n        if (x instanceof Observable_1.Observable) {\n          value = _this.materializeInnerObservable(value, _this.frame);\n        }\n\n        actual.push({\n          frame: _this.frame,\n          notification: Notification_1.Notification.createNext(value)\n        });\n      }, function (err) {\n        actual.push({\n          frame: _this.frame,\n          notification: Notification_1.Notification.createError(err)\n        });\n      }, function () {\n        actual.push({\n          frame: _this.frame,\n          notification: Notification_1.Notification.createComplete()\n        });\n      });\n    }, 0);\n\n    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n      this.schedule(function () {\n        return subscription.unsubscribe();\n      }, unsubscriptionFrame);\n    }\n\n    this.flushTests.push(flushTest);\n    return {\n      toBe: function (marbles, values, errorValue) {\n        flushTest.ready = true;\n        flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n      }\n    };\n  };\n\n  TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n    var flushTest = {\n      actual: actualSubscriptionLogs,\n      ready: false\n    };\n    this.flushTests.push(flushTest);\n    return {\n      toBe: function (marbles) {\n        var marblesArray = typeof marbles === 'string' ? [marbles] : marbles;\n        flushTest.ready = true;\n        flushTest.expected = marblesArray.map(function (marbles) {\n          return TestScheduler.parseMarblesAsSubscriptions(marbles);\n        });\n      }\n    };\n  };\n\n  TestScheduler.prototype.flush = function () {\n    var hotObservables = this.hotObservables;\n\n    while (hotObservables.length > 0) {\n      hotObservables.shift().setup();\n    }\n\n    _super.prototype.flush.call(this);\n\n    var readyFlushTests = this.flushTests.filter(function (test) {\n      return test.ready;\n    });\n\n    while (readyFlushTests.length > 0) {\n      var test = readyFlushTests.shift();\n      this.assertDeepEqual(test.actual, test.expected);\n    }\n  };\n\n  TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n    if (typeof marbles !== 'string') {\n      return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\n    }\n\n    var len = marbles.length;\n    var groupStart = -1;\n    var subscriptionFrame = Number.POSITIVE_INFINITY;\n    var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n\n    for (var i = 0; i < len; i++) {\n      var frame = i * this.frameTimeFactor;\n      var c = marbles[i];\n\n      switch (c) {\n        case '-':\n        case ' ':\n          break;\n\n        case '(':\n          groupStart = frame;\n          break;\n\n        case ')':\n          groupStart = -1;\n          break;\n\n        case '^':\n          if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n            throw new Error('found a second subscription point \\'^\\' in a ' + 'subscription marble diagram. There can only be one.');\n          }\n\n          subscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n\n        case '!':\n          if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            throw new Error('found a second subscription point \\'^\\' in a ' + 'subscription marble diagram. There can only be one.');\n          }\n\n          unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n          break;\n\n        default:\n          throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' + 'subscription marble diagram. Found instead \\'' + c + '\\'.');\n      }\n    }\n\n    if (unsubscriptionFrame < 0) {\n      return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n    } else {\n      return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n    }\n  };\n\n  TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n    if (materializeInnerObservables === void 0) {\n      materializeInnerObservables = false;\n    }\n\n    if (marbles.indexOf('!') !== -1) {\n      throw new Error('conventional marble diagrams cannot have the ' + 'unsubscription marker \"!\"');\n    }\n\n    var len = marbles.length;\n    var testMessages = [];\n    var subIndex = marbles.indexOf('^');\n    var frameOffset = subIndex === -1 ? 0 : subIndex * -this.frameTimeFactor;\n    var getValue = typeof values !== 'object' ? function (x) {\n      return x;\n    } : function (x) {\n      // Support Observable-of-Observables\n      if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n        return values[x].messages;\n      }\n\n      return values[x];\n    };\n    var groupStart = -1;\n\n    for (var i = 0; i < len; i++) {\n      var frame = i * this.frameTimeFactor + frameOffset;\n      var notification = void 0;\n      var c = marbles[i];\n\n      switch (c) {\n        case '-':\n        case ' ':\n          break;\n\n        case '(':\n          groupStart = frame;\n          break;\n\n        case ')':\n          groupStart = -1;\n          break;\n\n        case '|':\n          notification = Notification_1.Notification.createComplete();\n          break;\n\n        case '^':\n          break;\n\n        case '#':\n          notification = Notification_1.Notification.createError(errorValue || 'error');\n          break;\n\n        default:\n          notification = Notification_1.Notification.createNext(getValue(c));\n          break;\n      }\n\n      if (notification) {\n        testMessages.push({\n          frame: groupStart > -1 ? groupStart : frame,\n          notification: notification\n        });\n      }\n    }\n\n    return testMessages;\n  };\n\n  return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler);\n\nexports.TestScheduler = TestScheduler;","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Observable_1","require","Notification_1","ColdObservable_1","HotObservable_1","SubscriptionLog_1","VirtualTimeScheduler_1","defaultMaxFrame","TestScheduler","_super","assertDeepEqual","call","VirtualAction","hotObservables","coldObservables","flushTests","createTime","marbles","indexOf","Error","frameTimeFactor","createColdObservable","values","error","messages","parseMarbles","cold","ColdObservable","push","createHotObservable","subject","HotObservable","materializeInnerObservable","observable","outerFrame","_this","subscribe","value","frame","notification","Notification","createNext","err","createError","createComplete","expectObservable","unsubscriptionMarbles","actual","flushTest","ready","unsubscriptionFrame","parseMarblesAsSubscriptions","unsubscribedFrame","subscription","schedule","x","Observable","Number","POSITIVE_INFINITY","unsubscribe","toBe","errorValue","expected","expectSubscriptions","actualSubscriptionLogs","marblesArray","map","flush","length","shift","setup","readyFlushTests","filter","test","SubscriptionLog","len","groupStart","subscriptionFrame","i","c","materializeInnerObservables","testMessages","subIndex","frameOffset","getValue","VirtualTimeScheduler","exports"],"sources":["C:/Users/vidit.jain/node_modules/rxjs/testing/TestScheduler.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar Notification_1 = require('../Notification');\nvar ColdObservable_1 = require('./ColdObservable');\nvar HotObservable_1 = require('./HotObservable');\nvar SubscriptionLog_1 = require('./SubscriptionLog');\nvar VirtualTimeScheduler_1 = require('../scheduler/VirtualTimeScheduler');\nvar defaultMaxFrame = 750;\nvar TestScheduler = (function (_super) {\n    __extends(TestScheduler, _super);\n    function TestScheduler(assertDeepEqual) {\n        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);\n        this.assertDeepEqual = assertDeepEqual;\n        this.hotObservables = [];\n        this.coldObservables = [];\n        this.flushTests = [];\n    }\n    TestScheduler.prototype.createTime = function (marbles) {\n        var indexOf = marbles.indexOf('|');\n        if (indexOf === -1) {\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\n        }\n        return indexOf * TestScheduler.frameTimeFactor;\n    };\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\n        if (marbles.indexOf('^') !== -1) {\n            throw new Error('cold observable cannot have subscription offset \"^\"');\n        }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\n        this.coldObservables.push(cold);\n        return cold;\n    };\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\n        }\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\n        var subject = new HotObservable_1.HotObservable(messages, this);\n        this.hotObservables.push(subject);\n        return subject;\n    };\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\n        var _this = this;\n        var messages = [];\n        observable.subscribe(function (value) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });\n        }, function (err) {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });\n        }, function () {\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });\n        });\n        return messages;\n    };\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\n        var _this = this;\n        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }\n        var actual = [];\n        var flushTest = { actual: actual, ready: false };\n        var unsubscriptionFrame = TestScheduler\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\n        var subscription;\n        this.schedule(function () {\n            subscription = observable.subscribe(function (x) {\n                var value = x;\n                // Support Observable-of-Observables\n                if (x instanceof Observable_1.Observable) {\n                    value = _this.materializeInnerObservable(value, _this.frame);\n                }\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });\n            }, function (err) {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });\n            }, function () {\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });\n            });\n        }, 0);\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\n        }\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles, values, errorValue) {\n                flushTest.ready = true;\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\n            }\n        };\n    };\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\n        this.flushTests.push(flushTest);\n        return {\n            toBe: function (marbles) {\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\n                flushTest.ready = true;\n                flushTest.expected = marblesArray.map(function (marbles) {\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\n                });\n            }\n        };\n    };\n    TestScheduler.prototype.flush = function () {\n        var hotObservables = this.hotObservables;\n        while (hotObservables.length > 0) {\n            hotObservables.shift().setup();\n        }\n        _super.prototype.flush.call(this);\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\n        while (readyFlushTests.length > 0) {\n            var test = readyFlushTests.shift();\n            this.assertDeepEqual(test.actual, test.expected);\n        }\n    };\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\n        if (typeof marbles !== 'string') {\n            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\n        }\n        var len = marbles.length;\n        var groupStart = -1;\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '^':\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                case '!':\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\n                            'subscription marble diagram. There can only be one.');\n                    }\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\n                    break;\n                default:\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\n            }\n        }\n        if (unsubscriptionFrame < 0) {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\n        }\n        else {\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\n        }\n    };\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\n        if (marbles.indexOf('!') !== -1) {\n            throw new Error('conventional marble diagrams cannot have the ' +\n                'unsubscription marker \"!\"');\n        }\n        var len = marbles.length;\n        var testMessages = [];\n        var subIndex = marbles.indexOf('^');\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\n        var getValue = typeof values !== 'object' ?\n            function (x) { return x; } :\n            function (x) {\n                // Support Observable-of-Observables\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\n                    return values[x].messages;\n                }\n                return values[x];\n            };\n        var groupStart = -1;\n        for (var i = 0; i < len; i++) {\n            var frame = i * this.frameTimeFactor + frameOffset;\n            var notification = void 0;\n            var c = marbles[i];\n            switch (c) {\n                case '-':\n                case ' ':\n                    break;\n                case '(':\n                    groupStart = frame;\n                    break;\n                case ')':\n                    groupStart = -1;\n                    break;\n                case '|':\n                    notification = Notification_1.Notification.createComplete();\n                    break;\n                case '^':\n                    break;\n                case '#':\n                    notification = Notification_1.Notification.createError(errorValue || 'error');\n                    break;\n                default:\n                    notification = Notification_1.Notification.createNext(getValue(c));\n                    break;\n            }\n            if (notification) {\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\n            }\n        }\n        return testMessages;\n    };\n    return TestScheduler;\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\nexports.TestScheduler = TestScheduler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
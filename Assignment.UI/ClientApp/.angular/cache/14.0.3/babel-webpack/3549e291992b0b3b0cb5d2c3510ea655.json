{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subject_1 = require('../Subject');\n\nvar tryCatch_1 = require('../util/tryCatch');\n\nvar errorObject_1 = require('../util/errorObject');\n\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\n\n\nfunction windowWhen(closingSelector) {\n  return function windowWhenOperatorFunction(source) {\n    return source.lift(new WindowOperator(closingSelector));\n  };\n}\n\nexports.windowWhen = windowWhen;\n\nvar WindowOperator = function () {\n  function WindowOperator(closingSelector) {\n    this.closingSelector = closingSelector;\n  }\n\n  WindowOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  };\n\n  return WindowOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar WindowSubscriber = function (_super) {\n  __extends(WindowSubscriber, _super);\n\n  function WindowSubscriber(destination, closingSelector) {\n    _super.call(this, destination);\n\n    this.destination = destination;\n    this.closingSelector = closingSelector;\n    this.openWindow();\n  }\n\n  WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.openWindow(innerSub);\n  };\n\n  WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n    this._error(error);\n  };\n\n  WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n    this.openWindow(innerSub);\n  };\n\n  WindowSubscriber.prototype._next = function (value) {\n    this.window.next(value);\n  };\n\n  WindowSubscriber.prototype._error = function (err) {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  };\n\n  WindowSubscriber.prototype._complete = function () {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  };\n\n  WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  };\n\n  WindowSubscriber.prototype.openWindow = function (innerSub) {\n    if (innerSub === void 0) {\n      innerSub = null;\n    }\n\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    var prevWindow = this.window;\n\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    var window = this.window = new Subject_1.Subject();\n    this.destination.next(window);\n    var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n\n    if (closingNotifier === errorObject_1.errorObject) {\n      var err = errorObject_1.errorObject.e;\n      this.destination.error(err);\n      this.window.error(err);\n    } else {\n      this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    }\n  };\n\n  return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subject_1","require","tryCatch_1","errorObject_1","OuterSubscriber_1","subscribeToResult_1","windowWhen","closingSelector","windowWhenOperatorFunction","source","lift","WindowOperator","exports","call","subscriber","subscribe","WindowSubscriber","_super","destination","openWindow","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","error","_error","notifyComplete","_next","value","window","next","err","unsubscribeClosingNotification","_complete","complete","closingNotification","unsubscribe","remove","prevWindow","Subject","closingNotifier","tryCatch","errorObject","e","add","subscribeToResult","OuterSubscriber"],"sources":["C:/Users/vidit.jain/node_modules/rxjs/operators/windowWhen.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nexports.windowWhen = windowWhen;\nvar WindowOperator = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            var err = errorObject_1.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\n\n\nfunction withLatestFrom() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i - 0] = arguments[_i];\n  }\n\n  return function (source) {\n    var project;\n\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n\n    var observables = args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nexports.withLatestFrom = withLatestFrom;\n\nvar WithLatestFromOperator = function () {\n  function WithLatestFromOperator(observables, project) {\n    this.observables = observables;\n    this.project = project;\n  }\n\n  WithLatestFromOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  };\n\n  return WithLatestFromOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar WithLatestFromSubscriber = function (_super) {\n  __extends(WithLatestFromSubscriber, _super);\n\n  function WithLatestFromSubscriber(destination, observables, project) {\n    _super.call(this, destination);\n\n    this.observables = observables;\n    this.project = project;\n    this.toRespond = [];\n    var len = observables.length;\n    this.values = new Array(len);\n\n    for (var i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var observable = observables[i];\n      this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n    }\n  }\n\n  WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.values[outerIndex] = innerValue;\n    var toRespond = this.toRespond;\n\n    if (toRespond.length > 0) {\n      var found = toRespond.indexOf(outerIndex);\n\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  };\n\n  WithLatestFromSubscriber.prototype.notifyComplete = function () {// noop\n  };\n\n  WithLatestFromSubscriber.prototype._next = function (value) {\n    if (this.toRespond.length === 0) {\n      var args = [value].concat(this.values);\n\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next(args);\n      }\n    }\n  };\n\n  WithLatestFromSubscriber.prototype._tryProject = function (args) {\n    var result;\n\n    try {\n      result = this.project.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","OuterSubscriber_1","require","subscribeToResult_1","withLatestFrom","args","_i","arguments","length","source","project","pop","observables","lift","WithLatestFromOperator","exports","call","subscriber","subscribe","WithLatestFromSubscriber","_super","destination","toRespond","len","values","Array","i","push","observable","add","subscribeToResult","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","found","indexOf","splice","notifyComplete","_next","value","concat","_tryProject","next","result","apply","err","error","OuterSubscriber"],"sources":["C:/Users/vidit.jain/node_modules/rxjs/operators/withLatestFrom.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    return function (source) {\n        var project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        var observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nexports.withLatestFrom = withLatestFrom;\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EACxD,KAAK,IAAIC,CAAT,IAAcD,CAAd,EAAiB,IAAIA,CAAC,CAACE,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBF,CAAC,CAACE,CAAD,CAAD,GAAOD,CAAC,CAACC,CAAD,CAAR;;EAC1C,SAASE,EAAT,GAAc;IAAE,KAAKC,WAAL,GAAmBL,CAAnB;EAAuB;;EACvCA,CAAC,CAACM,SAAF,GAAcL,CAAC,KAAK,IAAN,GAAaM,MAAM,CAACC,MAAP,CAAcP,CAAd,CAAb,IAAiCG,EAAE,CAACE,SAAH,GAAeL,CAAC,CAACK,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,CAJD;;AAKA,IAAIK,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,2BAAD,CAAjC;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,cAAT,GAA0B;EACtB,IAAIC,IAAI,GAAG,EAAX;;EACA,KAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;IAC1CD,IAAI,CAACC,EAAE,GAAG,CAAN,CAAJ,GAAeC,SAAS,CAACD,EAAD,CAAxB;EACH;;EACD,OAAO,UAAUG,MAAV,EAAkB;IACrB,IAAIC,OAAJ;;IACA,IAAI,OAAOL,IAAI,CAACA,IAAI,CAACG,MAAL,GAAc,CAAf,CAAX,KAAiC,UAArC,EAAiD;MAC7CE,OAAO,GAAGL,IAAI,CAACM,GAAL,EAAV;IACH;;IACD,IAAIC,WAAW,GAAGP,IAAlB;IACA,OAAOI,MAAM,CAACI,IAAP,CAAY,IAAIC,sBAAJ,CAA2BF,WAA3B,EAAwCF,OAAxC,CAAZ,CAAP;EACH,CAPD;AAQH;;AACDK,OAAO,CAACX,cAAR,GAAyBA,cAAzB;;AACA,IAAIU,sBAAsB,GAAI,YAAY;EACtC,SAASA,sBAAT,CAAgCF,WAAhC,EAA6CF,OAA7C,EAAsD;IAClD,KAAKE,WAAL,GAAmBA,WAAnB;IACA,KAAKF,OAAL,GAAeA,OAAf;EACH;;EACDI,sBAAsB,CAAChB,SAAvB,CAAiCkB,IAAjC,GAAwC,UAAUC,UAAV,EAAsBR,MAAtB,EAA8B;IAClE,OAAOA,MAAM,CAACS,SAAP,CAAiB,IAAIC,wBAAJ,CAA6BF,UAA7B,EAAyC,KAAKL,WAA9C,EAA2D,KAAKF,OAAhE,CAAjB,CAAP;EACH,CAFD;;EAGA,OAAOI,sBAAP;AACH,CAT6B,EAA9B;AAUA;AACA;AACA;AACA;AACA;;;AACA,IAAIK,wBAAwB,GAAI,UAAUC,MAAV,EAAkB;EAC9C7B,SAAS,CAAC4B,wBAAD,EAA2BC,MAA3B,CAAT;;EACA,SAASD,wBAAT,CAAkCE,WAAlC,EAA+CT,WAA/C,EAA4DF,OAA5D,EAAqE;IACjEU,MAAM,CAACJ,IAAP,CAAY,IAAZ,EAAkBK,WAAlB;;IACA,KAAKT,WAAL,GAAmBA,WAAnB;IACA,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKY,SAAL,GAAiB,EAAjB;IACA,IAAIC,GAAG,GAAGX,WAAW,CAACJ,MAAtB;IACA,KAAKgB,MAAL,GAAc,IAAIC,KAAJ,CAAUF,GAAV,CAAd;;IACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;MAC1B,KAAKJ,SAAL,CAAeK,IAAf,CAAoBD,CAApB;IACH;;IACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;MAC1B,IAAIE,UAAU,GAAGhB,WAAW,CAACc,CAAD,CAA5B;MACA,KAAKG,GAAL,CAAS1B,mBAAmB,CAAC2B,iBAApB,CAAsC,IAAtC,EAA4CF,UAA5C,EAAwDA,UAAxD,EAAoEF,CAApE,CAAT;IACH;EACJ;;EACDP,wBAAwB,CAACrB,SAAzB,CAAmCiC,UAAnC,GAAgD,UAAUC,UAAV,EAAsBC,UAAtB,EAAkCC,UAAlC,EAA8CC,UAA9C,EAA0DC,QAA1D,EAAoE;IAChH,KAAKZ,MAAL,CAAYU,UAAZ,IAA0BD,UAA1B;IACA,IAAIX,SAAS,GAAG,KAAKA,SAArB;;IACA,IAAIA,SAAS,CAACd,MAAV,GAAmB,CAAvB,EAA0B;MACtB,IAAI6B,KAAK,GAAGf,SAAS,CAACgB,OAAV,CAAkBJ,UAAlB,CAAZ;;MACA,IAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;QACdf,SAAS,CAACiB,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;MACH;IACJ;EACJ,CATD;;EAUAlB,wBAAwB,CAACrB,SAAzB,CAAmC0C,cAAnC,GAAoD,YAAY,CAC5D;EACH,CAFD;;EAGArB,wBAAwB,CAACrB,SAAzB,CAAmC2C,KAAnC,GAA2C,UAAUC,KAAV,EAAiB;IACxD,IAAI,KAAKpB,SAAL,CAAed,MAAf,KAA0B,CAA9B,EAAiC;MAC7B,IAAIH,IAAI,GAAG,CAACqC,KAAD,EAAQC,MAAR,CAAe,KAAKnB,MAApB,CAAX;;MACA,IAAI,KAAKd,OAAT,EAAkB;QACd,KAAKkC,WAAL,CAAiBvC,IAAjB;MACH,CAFD,MAGK;QACD,KAAKgB,WAAL,CAAiBwB,IAAjB,CAAsBxC,IAAtB;MACH;IACJ;EACJ,CAVD;;EAWAc,wBAAwB,CAACrB,SAAzB,CAAmC8C,WAAnC,GAAiD,UAAUvC,IAAV,EAAgB;IAC7D,IAAIyC,MAAJ;;IACA,IAAI;MACAA,MAAM,GAAG,KAAKpC,OAAL,CAAaqC,KAAb,CAAmB,IAAnB,EAAyB1C,IAAzB,CAAT;IACH,CAFD,CAGA,OAAO2C,GAAP,EAAY;MACR,KAAK3B,WAAL,CAAiB4B,KAAjB,CAAuBD,GAAvB;MACA;IACH;;IACD,KAAK3B,WAAL,CAAiBwB,IAAjB,CAAsBC,MAAtB;EACH,CAVD;;EAWA,OAAO3B,wBAAP;AACH,CArD+B,CAqD9BlB,iBAAiB,CAACiD,eArDY,CAAhC"},"metadata":{},"sourceType":"script"}
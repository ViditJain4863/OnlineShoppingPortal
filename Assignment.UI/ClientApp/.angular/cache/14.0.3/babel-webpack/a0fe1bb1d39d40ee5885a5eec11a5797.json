{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nvar Subscriber_1 = require('../Subscriber');\n\nvar Subscription_1 = require('../Subscription');\n\nvar Observable_1 = require('../Observable');\n\nvar Subject_1 = require('../Subject');\n\nvar Map_1 = require('../util/Map');\n\nvar FastMap_1 = require('../util/FastMap');\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\n\n\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n  return function (source) {\n    return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n  };\n}\n\nexports.groupBy = groupBy;\n\nvar GroupByOperator = function () {\n  function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n    this.keySelector = keySelector;\n    this.elementSelector = elementSelector;\n    this.durationSelector = durationSelector;\n    this.subjectSelector = subjectSelector;\n  }\n\n  GroupByOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n  };\n\n  return GroupByOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar GroupBySubscriber = function (_super) {\n  __extends(GroupBySubscriber, _super);\n\n  function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n    _super.call(this, destination);\n\n    this.keySelector = keySelector;\n    this.elementSelector = elementSelector;\n    this.durationSelector = durationSelector;\n    this.subjectSelector = subjectSelector;\n    this.groups = null;\n    this.attemptedToUnsubscribe = false;\n    this.count = 0;\n  }\n\n  GroupBySubscriber.prototype._next = function (value) {\n    var key;\n\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  };\n\n  GroupBySubscriber.prototype._group = function (value, key) {\n    var groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n    }\n\n    var group = groups.get(key);\n    var element;\n\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = value;\n    }\n\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n      groups.set(key, group);\n      var groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n\n      if (this.durationSelector) {\n        var duration = void 0;\n\n        try {\n          duration = this.durationSelector(new GroupedObservable(key, group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  };\n\n  GroupBySubscriber.prototype._error = function (err) {\n    var groups = this.groups;\n\n    if (groups) {\n      groups.forEach(function (group, key) {\n        group.error(err);\n      });\n      groups.clear();\n    }\n\n    this.destination.error(err);\n  };\n\n  GroupBySubscriber.prototype._complete = function () {\n    var groups = this.groups;\n\n    if (groups) {\n      groups.forEach(function (group, key) {\n        group.complete();\n      });\n      groups.clear();\n    }\n\n    this.destination.complete();\n  };\n\n  GroupBySubscriber.prototype.removeGroup = function (key) {\n    this.groups.delete(key);\n  };\n\n  GroupBySubscriber.prototype.unsubscribe = function () {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n\n      if (this.count === 0) {\n        _super.prototype.unsubscribe.call(this);\n      }\n    }\n  };\n\n  return GroupBySubscriber;\n}(Subscriber_1.Subscriber);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar GroupDurationSubscriber = function (_super) {\n  __extends(GroupDurationSubscriber, _super);\n\n  function GroupDurationSubscriber(key, group, parent) {\n    _super.call(this, group);\n\n    this.key = key;\n    this.group = group;\n    this.parent = parent;\n  }\n\n  GroupDurationSubscriber.prototype._next = function (value) {\n    this.complete();\n  };\n  /** @deprecated internal use only */\n\n\n  GroupDurationSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n        parent = _a.parent,\n        key = _a.key;\n\n    this.key = this.parent = null;\n\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  };\n\n  return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber);\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\n\n\nvar GroupedObservable = function (_super) {\n  __extends(GroupedObservable, _super);\n\n  function GroupedObservable(key, groupSubject, refCountSubscription) {\n    _super.call(this);\n\n    this.key = key;\n    this.groupSubject = groupSubject;\n    this.refCountSubscription = refCountSubscription;\n  }\n  /** @deprecated internal use only */\n\n\n  GroupedObservable.prototype._subscribe = function (subscriber) {\n    var subscription = new Subscription_1.Subscription();\n\n    var _a = this,\n        refCountSubscription = _a.refCountSubscription,\n        groupSubject = _a.groupSubject;\n\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  };\n\n  return GroupedObservable;\n}(Observable_1.Observable);\n\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nvar InnerRefCountSubscription = function (_super) {\n  __extends(InnerRefCountSubscription, _super);\n\n  function InnerRefCountSubscription(parent) {\n    _super.call(this);\n\n    this.parent = parent;\n    parent.count++;\n  }\n\n  InnerRefCountSubscription.prototype.unsubscribe = function () {\n    var parent = this.parent;\n\n    if (!parent.closed && !this.closed) {\n      _super.prototype.unsubscribe.call(this);\n\n      parent.count -= 1;\n\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  };\n\n  return InnerRefCountSubscription;\n}(Subscription_1.Subscription);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","Subscription_1","Observable_1","Subject_1","Map_1","FastMap_1","groupBy","keySelector","elementSelector","durationSelector","subjectSelector","source","lift","GroupByOperator","exports","call","subscriber","subscribe","GroupBySubscriber","_super","destination","groups","attemptedToUnsubscribe","count","_next","value","key","err","error","_group","FastMap","Map","group","get","element","Subject","set","groupedObservable","GroupedObservable","next","duration","add","GroupDurationSubscriber","closed","_error","forEach","clear","_complete","complete","removeGroup","delete","unsubscribe","Subscriber","parent","_unsubscribe","_a","groupSubject","refCountSubscription","_subscribe","subscription","Subscription","InnerRefCountSubscription","Observable"],"sources":["C:/Users/vidit.jain/node_modules/rxjs/operators/groupBy.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar Observable_1 = require('../Observable');\nvar Subject_1 = require('../Subject');\nvar Map_1 = require('../util/Map');\nvar FastMap_1 = require('../util/FastMap');\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this, group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    /** @deprecated internal use only */ GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    /** @deprecated internal use only */ GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
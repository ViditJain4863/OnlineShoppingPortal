{"ast":null,"code":"\"use strict\";\n\nvar SubscribeOnObservable_1 = require('../observable/SubscribeOnObservable');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\n\n\nfunction subscribeOn(scheduler, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return function subscribeOnOperatorFunction(source) {\n    return source.lift(new SubscribeOnOperator(scheduler, delay));\n  };\n}\n\nexports.subscribeOn = subscribeOn;\n\nvar SubscribeOnOperator = function () {\n  function SubscribeOnOperator(scheduler, delay) {\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n\n  SubscribeOnOperator.prototype.call = function (subscriber, source) {\n    return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n  };\n\n  return SubscribeOnOperator;\n}();","map":{"version":3,"names":["SubscribeOnObservable_1","require","subscribeOn","scheduler","delay","subscribeOnOperatorFunction","source","lift","SubscribeOnOperator","exports","prototype","call","subscriber","SubscribeOnObservable","subscribe"],"sources":["C:/Users/vidit.jain/node_modules/rxjs/operators/subscribeOn.js"],"sourcesContent":["\"use strict\";\nvar SubscribeOnObservable_1 = require('../observable/SubscribeOnObservable');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nexports.subscribeOn = subscribeOn;\nvar SubscribeOnOperator = (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n"],"mappings":"AAAA;;AACA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,qCAAD,CAArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,KAAhC,EAAuC;EACnC,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;IAAEA,KAAK,GAAG,CAAR;EAAY;;EACpC,OAAO,SAASC,2BAAT,CAAqCC,MAArC,EAA6C;IAChD,OAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,mBAAJ,CAAwBL,SAAxB,EAAmCC,KAAnC,CAAZ,CAAP;EACH,CAFD;AAGH;;AACDK,OAAO,CAACP,WAAR,GAAsBA,WAAtB;;AACA,IAAIM,mBAAmB,GAAI,YAAY;EACnC,SAASA,mBAAT,CAA6BL,SAA7B,EAAwCC,KAAxC,EAA+C;IAC3C,KAAKD,SAAL,GAAiBA,SAAjB;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;;EACDI,mBAAmB,CAACE,SAApB,CAA8BC,IAA9B,GAAqC,UAAUC,UAAV,EAAsBN,MAAtB,EAA8B;IAC/D,OAAO,IAAIN,uBAAuB,CAACa,qBAA5B,CAAkDP,MAAlD,EAA0D,KAAKF,KAA/D,EAAsE,KAAKD,SAA3E,EAAsFW,SAAtF,CAAgGF,UAAhG,CAAP;EACH,CAFD;;EAGA,OAAOJ,mBAAP;AACH,CAT0B,EAA3B"},"metadata":{},"sourceType":"script"}